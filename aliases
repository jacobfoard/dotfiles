#!/bin/zsh

alias __git=hub
alias bb-k8s="k run -i --tty --image alpine alpine --restart=Never --rm -- /bin/sh"
alias cat="bat"
alias cfg="~/.config/jacobfoard"
alias clean-up-git-branches-force="git branch -vv | grep origin | grep gone | awk '{print \$1}'|xargs -L 1 git branch -D"
alias clean-up-git-branches="git branch -vv | grep origin | grep gone | awk '{print \$1}'|xargs -L 1 git branch -d"
alias clean-up-sqaush-main='git checkout -q main && git for-each-ref refs/heads/ "--format=%(refname:short)" | while read branch; do mergeBase=$(git merge-base main $branch) && [[ $(git cherry main $(git commit-tree $(git rev-parse $branch\^{tree}) -p $mergeBase -m _)) == "-"* ]] && git branch -D $branch; done'
alias copy="tr -d '\n' | pbcopy"
alias dotfiles="~/go/src/github.com/jacobfoard/dotfiles"
alias fluxctl="fluxctl --k8s-fwd-ns=flux"
alias gca="git commit --amend --no-edit"
alias gh="~/go/src/github.com"
alias gssh="TERM=xterm-256color gcloud compute ssh --tunnel-through-iap"
alias jf="cd ~/go/src/github.com/jacobfoard"
alias k="kubectl"
alias kc="kubectx"
alias kns="kubens"
alias ls="exa"
alias mkdir="mkdir -p"
alias nvim-cfg="~/.config/nvim"
alias oni="/Applications/Onivim2.app/Contents/MacOS/Oni2"
alias pip="pip3"
alias proj="gcloud config configurations activate"
alias r='cd `git rev-parse --show-toplevel`' # we use ' here because otherwise its eval'd on shell launch
alias sed=gsed
alias ssh="TERM=xterm-256color ssh"

eval "$(hub alias -s)"
eval $(thefuck --alias)

function gget() {
	url=$(echo $1 | sed 's~http[s]*://~~g' | sed 's~git@github.com:~github.com/~g' | sed 's~.git~~g')
	go get $url && cd ~/go/src/$url
}

function copy-path() {
	realpath $1 | tr -d '\n' | pbcopy
}

# alias vim="~/.config/nvim/nvim-osx64/bin/nvim"
function vim() {
	if [ -z "$1" ]; then
			nvim -c "let g:session_autosave = 'yes'"
	else
		if [ $NVIM_LISTEN_ADDRESS ]; then
			nvr -O $@
		else
			nvim $@
		fi
	fi
}

function v-swap() {
	GH=$(cat ~/.config/vault-gh)
	R=$(cat ~/.config/vault-r)
	CURRENT=$(cat ~/.vault-token)

	if [[ $CURRENT == $R ]]; then
		echo "Swapping from R to GH"
		echo $GH >~/.vault-token
	elif [[ $CURRENT == $GH ]]; then
		echo "Swapping from GH to R"
		echo $R >~/.vault-token
	fi
}

